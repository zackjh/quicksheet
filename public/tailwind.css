/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*,
::before,
::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.prose {
  color: var(--tw-prose-body);
  /* max-width: 65ch; */
}

.prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose
  :where([class~='lead']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose
  :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose
  :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}

.prose
  :where(blockquote strong):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}

.prose
  :where(thead th strong):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}

.prose :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose
  :where(ol[type='A']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-alpha;
}

.prose
  :where(ol[type='a']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-alpha;
}

.prose
  :where(ol[type='A' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-alpha;
}

.prose
  :where(ol[type='a' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-alpha;
}

.prose
  :where(ol[type='I']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-roman;
}

.prose
  :where(ol[type='i']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-roman;
}

.prose
  :where(ol[type='I' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-roman;
}

.prose
  :where(ol[type='i' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-roman;
}

.prose
  :where(ol[type='1']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose
  :where(ol > li):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose
  :where(ul > li):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose
  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: '\201C' '\201D' '\2018' '\2019';
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: open-quote;
}

.prose
  :where(blockquote p:last-of-type):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose
  :where(h1 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose
  :where(h2 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose
  :where(h3 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose
  :where(h4 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose
  :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow:
    0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
    0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose
  :where(code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: '`';
}

.prose
  :where(code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: '`';
}

.prose
  :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}

.prose
  :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}

.prose
  :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose
  :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose
  :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}

.prose
  :where(blockquote code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}

.prose
  :where(thead th code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}

.prose :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose
  :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose
  :where(pre code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: none;
}

.prose
  :where(pre code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: none;
}

.prose :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose
  :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose
  :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose
  :where(tbody tr:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  border-bottom-width: 0;
}

.prose
  :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose
  :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  vertical-align: top;
}

.prose
  :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose
  :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose
  :where(picture > img):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose
  :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-inline-start: 0.375em;
}

.prose
  :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-inline-start: 0.375em;
}

.prose
  :where(.prose > ul > li p):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose
  :where(.prose > ul > li > p:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ul > li > p:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.25em;
}

.prose
  :where(.prose > ol > li > p:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ol > li > p:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.25em;
}

.prose
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose
  :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose
  :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose
  :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose
  :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose
  :where(thead th:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-start: 0;
}

.prose
  :where(thead th:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-end: 0;
}

.prose
  :where(tbody td, tfoot td):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-start: 0;
}

.prose
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-end: 0;
}

.prose
  :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose
  :where(.prose > :first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
}

.prose
  :where(.prose > :last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 0;
}

.prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.prose-sm :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm
  :where([class~='lead']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-sm
  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.1111111em;
}

.prose-sm :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.prose-sm :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.prose-sm :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.prose-sm :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.prose-sm
  :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm
  :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm
  :where(picture > img):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm
  :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm
  :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8571429em;
  border-radius: 0.3125rem;
  padding-top: 0.1428571em;
  padding-inline-end: 0.3571429em;
  padding-bottom: 0.1428571em;
  padding-inline-start: 0.3571429em;
}

.prose-sm
  :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8571429em;
}

.prose-sm
  :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.9em;
}

.prose-sm
  :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
}

.prose-sm
  :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.prose-sm
  :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm
  :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm
  :where(.prose-sm > ul > li p):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm
  :where(.prose-sm > ul > li > p:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.1428571em;
}

.prose-sm
  :where(.prose-sm > ul > li > p:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.1428571em;
}

.prose-sm
  :where(.prose-sm > ol > li > p:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.1428571em;
}

.prose-sm
  :where(.prose-sm > ol > li > p:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.1428571em;
}

.prose-sm
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.2857143em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.prose-sm
  :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm
  :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}

.prose-sm
  :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm
  :where(thead th:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-start: 0;
}

.prose-sm
  :where(thead th:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-end: 0;
}

.prose-sm
  :where(tbody td, tfoot td):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-start: 0;
}

.prose-sm
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-inline-end: 0;
}

.prose-sm
  :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm
  :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm
  :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.prose-sm
  :where(.prose-sm > :first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
}

.prose-sm
  :where(.prose-sm > :last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.left-2 {
  left: 0.5rem;
}

.left-\[50\%\] {
  left: 50%;
}

.right-2 {
  right: 0.5rem;
}

.right-4 {
  right: 1rem;
}

.top-2 {
  top: 0.5rem;
}

.top-4 {
  top: 1rem;
}

.top-\[50\%\] {
  top: 50%;
}

.z-50 {
  z-index: 50;
}

.m-0 {
  margin: 0px;
}

.m-px {
  margin: 1px;
}

.-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}

.mx-5 {
  margin-left: 1.25rem;
  margin-right: 1.25rem;
}

.mx-\[2px\] {
  margin-left: 2px;
  margin-right: 2px;
}

.mx-\[3px\] {
  margin-left: 3px;
  margin-right: 3px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.ml-14 {
  margin-left: 3.5rem;
}

.ml-3 {
  margin-left: 0.75rem;
}

.ml-4 {
  margin-left: 1rem;
}

.ml-auto {
  margin-left: auto;
}

.ml-px {
  margin-left: 1px;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.h-10 {
  height: 2.5rem;
}

.h-11 {
  height: 2.75rem;
}

.h-2 {
  height: 0.5rem;
}

.h-2\.5 {
  height: 0.625rem;
}

.h-3 {
  height: 0.75rem;
}

.h-3\.5 {
  height: 0.875rem;
}

.h-4 {
  height: 1rem;
}

.h-6 {
  height: 1.5rem;
}

.h-7 {
  height: 1.75rem;
}

.h-8 {
  height: 2rem;
}

.h-9 {
  height: 2.25rem;
}

.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}

.h-px {
  height: 1px;
}

.max-h-96 {
  max-height: 24rem;
}

.w-10 {
  width: 2.5rem;
}

.w-12 {
  width: 3rem;
}

.w-14 {
  width: 3.5rem;
}

.w-16 {
  width: 4rem;
}

.w-2 {
  width: 0.5rem;
}

.w-2\.5 {
  width: 0.625rem;
}

.w-3 {
  width: 0.75rem;
}

.w-3\.5 {
  width: 0.875rem;
}

.w-4 {
  width: 1rem;
}

.w-40 {
  width: 10rem;
}

.w-6 {
  width: 1.5rem;
}

.w-7 {
  width: 1.75rem;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.w-px {
  width: 1px;
}

.min-w-\[12rem\] {
  min-width: 12rem;
}

.min-w-\[8rem\] {
  min-width: 8rem;
}

.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}

.max-w-lg {
  max-width: 32rem;
}

.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-none {
  border-radius: 0px;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.border {
  border-width: 1px;
}

.border-none {
  border-style: none;
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / var(--tw-border-opacity));
}

.border-neutral-900 {
  --tw-border-opacity: 1;
  border-color: rgb(23 23 23 / var(--tw-border-opacity));
}

.border-slate-500 {
  --tw-border-opacity: 1;
  border-color: rgb(100 116 139 / var(--tw-border-opacity));
}

.bg-black\/60 {
  background-color: rgb(0 0 0 / 0.6);
}

.bg-blue-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}

.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.bg-neutral-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-slate-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
}

.bg-slate-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.fill-current {
  fill: currentColor;
}

.p-0 {
  padding: 0px;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.pl-8 {
  padding-left: 2rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.text-center {
  text-align: center;
}

.text-end {
  text-align: end;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.italic {
  font-style: italic;
}

.leading-none {
  line-height: 1;
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.tracking-widest {
  letter-spacing: 0.1em;
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.text-current {
  color: currentColor;
}

.text-neutral-50 {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.text-neutral-950 {
  --tw-text-opacity: 1;
  color: rgb(10 10 10 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-60 {
  opacity: 0.6;
}

.opacity-70 {
  opacity: 0.7;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),
    0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.ring-inset {
  --tw-ring-inset: inset;
}

.ring-offset-white {
  --tw-ring-offset-color: #fff;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-colors {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}

.duration-200 {
  animation-duration: 200ms;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

@media (min-width: 640px) {
  .sm\:prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
  }

  .sm\:prose
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose
    :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .sm\:prose
    :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }

  .sm\:prose
    :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }

  .sm\:prose
    :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }

  .sm\:prose
    :where(blockquote strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }

  .sm\:prose
    :where(thead th strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }

  .sm\:prose
    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  .sm\:prose
    :where(ol[type='A']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }

  .sm\:prose
    :where(ol[type='a']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }

  .sm\:prose
    :where(ol[type='A' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }

  .sm\:prose
    :where(ol[type='a' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }

  .sm\:prose
    :where(ol[type='I']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }

  .sm\:prose
    :where(ol[type='i']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }

  .sm\:prose
    :where(ol[type='I' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }

  .sm\:prose
    :where(ol[type='i' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }

  .sm\:prose
    :where(ol[type='1']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: decimal;
  }

  .sm\:prose
    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  .sm\:prose
    :where(ol > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }

  .sm\:prose
    :where(ul > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }

  .sm\:prose
    :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }

  .sm\:prose
    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .sm\:prose
    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: '\201C' '\201D' '\2018' '\2019';
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
  }

  .sm\:prose
    :where(blockquote p:first-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: open-quote;
  }

  .sm\:prose
    :where(blockquote p:last-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: close-quote;
  }

  .sm\:prose
    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .sm\:prose
    :where(h1 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-weight: 900;
    color: inherit;
  }

  .sm\:prose
    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .sm\:prose
    :where(h2 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-weight: 800;
    color: inherit;
  }

  .sm\:prose
    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .sm\:prose
    :where(h3 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-weight: 700;
    color: inherit;
  }

  .sm\:prose
    :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }

  .sm\:prose
    :where(h4 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-weight: 700;
    color: inherit;
  }

  .sm\:prose
    :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose
    :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose
    :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose
    :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow:
      0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-inline-start: 0.375em;
  }

  .sm\:prose
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }

  .sm\:prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: '`';
  }

  .sm\:prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: '`';
  }

  .sm\:prose
    :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }

  .sm\:prose
    :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }

  .sm\:prose
    :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.875em;
  }

  .sm\:prose
    :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.9em;
  }

  .sm\:prose
    :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }

  .sm\:prose
    :where(blockquote code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }

  .sm\:prose
    :where(thead th code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }

  .sm\:prose
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
  }

  .sm\:prose
    :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  .sm\:prose
    :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: none;
  }

  .sm\:prose
    :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: none;
  }

  .sm\:prose
    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    width: 100%;
    table-layout: auto;
    text-align: start;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  .sm\:prose
    :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  .sm\:prose
    :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }

  .sm\:prose
    :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }

  .sm\:prose
    :where(tbody tr:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    border-bottom-width: 0;
  }

  .sm\:prose
    :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: baseline;
  }

  .sm\:prose
    :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }

  .sm\:prose
    :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: top;
  }

  .sm\:prose
    :where(figure > *):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .sm\:prose
    :where(figcaption):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .sm\:prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-kbd: #111827;
    --tw-prose-kbd-shadows: 17 24 39;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
  }

  .sm\:prose
    :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .sm\:prose
    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .sm\:prose
    :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }

  .sm\:prose
    :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }

  .sm\:prose
    :where(.sm\:prose > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose
    :where(.sm\:prose > ul > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }

  .sm\:prose
    :where(.sm\:prose > ul > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }

  .sm\:prose
    :where(.sm\:prose > ol > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }

  .sm\:prose
    :where(.sm\:prose > ol > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }

  .sm\:prose
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose
    :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose
    :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }

  .sm\:prose
    :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose
    :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose
    :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose
    :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose
    :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .sm\:prose
    :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .sm\:prose
    :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.5714286em;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }

  .sm\:prose
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .sm\:prose
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .sm\:prose
    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose
    :where(.sm\:prose > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }

  .sm\:prose
    :where(.sm\:prose > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
}

@media (min-width: 1024px) {
  .lg\:prose-lg {
    font-size: 1.125rem;
    line-height: 1.7777778;
  }

  .lg\:prose-lg
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .lg\:prose-lg
    :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }

  .lg\:prose-lg
    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-inline-start: 1em;
  }

  .lg\:prose-lg
    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }

  .lg\:prose-lg
    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-lg
    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }

  .lg\:prose-lg
    :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }

  .lg\:prose-lg
    :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .lg\:prose-lg
    :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .lg\:prose-lg
    :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-lg
    :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .lg\:prose-lg
    :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    border-radius: 0.3125rem;
    padding-top: 0.2222222em;
    padding-inline-end: 0.4444444em;
    padding-bottom: 0.2222222em;
    padding-inline-start: 0.4444444em;
  }

  .lg\:prose-lg
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
  }

  .lg\:prose-lg
    :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8666667em;
  }

  .lg\:prose-lg
    :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.875em;
  }

  .lg\:prose-lg
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-inline-end: 1.5em;
    padding-bottom: 1em;
    padding-inline-start: 1.5em;
  }

  .lg\:prose-lg
    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5555556em;
  }

  .lg\:prose-lg
    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5555556em;
  }

  .lg\:prose-lg
    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }

  .lg\:prose-lg
    :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.4444444em;
  }

  .lg\:prose-lg
    :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.4444444em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > ol > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > ol > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }

  .lg\:prose-lg
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .lg\:prose-lg
    :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .lg\:prose-lg
    :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
  }

  .lg\:prose-lg
    :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.6666667em;
    padding-inline-start: 1.5555556em;
  }

  .lg\:prose-lg
    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }

  .lg\:prose-lg
    :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .lg\:prose-lg
    :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .lg\:prose-lg
    :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .lg\:prose-lg
    :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .lg\:prose-lg
    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    line-height: 1.5;
  }

  .lg\:prose-lg
    :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-end: 0.75em;
    padding-bottom: 0.75em;
    padding-inline-start: 0.75em;
  }

  .lg\:prose-lg
    :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .lg\:prose-lg
    :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .lg\:prose-lg
    :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.75em;
    padding-inline-end: 0.75em;
    padding-bottom: 0.75em;
    padding-inline-start: 0.75em;
  }

  .lg\:prose-lg
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .lg\:prose-lg
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .lg\:prose-lg
    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .lg\:prose-lg
    :where(figure > *):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-lg
    :where(figcaption):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }

  .lg\:prose-lg
    :where(.lg\:prose-lg > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
}

@media (min-width: 1280px) {
  .xl\:prose-2xl {
    font-size: 1.5rem;
    line-height: 1.6666667;
  }

  .xl\:prose-2xl
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .xl\:prose-2xl
    :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 1.25em;
    line-height: 1.4666667;
    margin-top: 1.0666667em;
    margin-bottom: 1.0666667em;
  }

  .xl\:prose-2xl
    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
    padding-inline-start: 1.1111111em;
  }

  .xl\:prose-2xl
    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.875em;
    line-height: 1;
  }

  .xl\:prose-2xl
    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 2em;
    margin-top: 1.5em;
    margin-bottom: 0.8333333em;
    line-height: 1.0833333;
  }

  .xl\:prose-2xl
    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 1.5em;
    margin-top: 1.5555556em;
    margin-bottom: 0.6666667em;
    line-height: 1.2222222;
  }

  .xl\:prose-2xl
    :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }

  .xl\:prose-2xl
    :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .xl\:prose-2xl
    :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .xl\:prose-2xl
    :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .xl\:prose-2xl
    :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .xl\:prose-2xl
    :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8333333em;
    border-radius: 0.375rem;
    padding-top: 0.25em;
    padding-inline-end: 0.3333333em;
    padding-bottom: 0.25em;
    padding-inline-start: 0.3333333em;
  }

  .xl\:prose-2xl
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8333333em;
  }

  .xl\:prose-2xl
    :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.875em;
  }

  .xl\:prose-2xl
    :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
  }

  .xl\:prose-2xl
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8333333em;
    line-height: 1.8;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.2em;
    padding-inline-end: 1.6em;
    padding-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }

  .xl\:prose-2xl
    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5833333em;
  }

  .xl\:prose-2xl
    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5833333em;
  }

  .xl\:prose-2xl
    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .xl\:prose-2xl
    :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.4166667em;
  }

  .xl\:prose-2xl
    :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.4166667em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.8333333em;
    margin-bottom: 0.8333333em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > ul > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > ul > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > ol > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > ol > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }

  .xl\:prose-2xl
    :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
  }

  .xl\:prose-2xl
    :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.5833333em;
  }

  .xl\:prose-2xl
    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .xl\:prose-2xl
    :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .xl\:prose-2xl
    :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .xl\:prose-2xl
    :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .xl\:prose-2xl
    :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }

  .xl\:prose-2xl
    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8333333em;
    line-height: 1.4;
  }

  .xl\:prose-2xl
    :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }

  .xl\:prose-2xl
    :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .xl\:prose-2xl
    :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .xl\:prose-2xl
    :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.8em;
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }

  .xl\:prose-2xl
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }

  .xl\:prose-2xl
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }

  .xl\:prose-2xl
    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .xl\:prose-2xl
    :where(figure > *):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .xl\:prose-2xl
    :where(figcaption):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 0.8333333em;
    line-height: 1.6;
    margin-top: 1em;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }

  .xl\:prose-2xl
    :where(.xl\:prose-2xl > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
}

.file\:border-0::file-selector-button {
  border-width: 0px;
}

.file\:bg-transparent::file-selector-button {
  background-color: transparent;
}

.file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.file\:font-medium::file-selector-button {
  font-weight: 500;
}

.placeholder\:text-neutral-500::-moz-placeholder {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.placeholder\:text-neutral-500::placeholder {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.hover\:cursor-pointer:hover {
  cursor: pointer;
}

.hover\:border-blue-100:hover {
  --tw-border-opacity: 1;
  border-color: rgb(219 234 254 / var(--tw-border-opacity));
}

.hover\:bg-blue-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}

.hover\:bg-blue-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

.hover\:bg-blue-500\/90:hover {
  background-color: rgb(59 130 246 / 0.9);
}

.hover\:bg-neutral-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-100\/80:hover {
  background-color: rgb(245 245 245 / 0.8);
}

.hover\:bg-neutral-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-900\/90:hover {
  background-color: rgb(23 23 23 / 0.9);
}

.hover\:bg-red-500\/90:hover {
  background-color: rgb(239 68 68 / 0.9);
}

.hover\:bg-slate-300:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(203 213 225 / var(--tw-bg-opacity));
}

.hover\:text-blue-500:hover {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.hover\:text-neutral-900:hover {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:opacity-100:hover {
  opacity: 1;
}

.focus\:rounded-full:focus {
  border-radius: 9999px;
}

.focus\:bg-blue-50:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

.focus\:bg-neutral-100:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.focus\:bg-neutral-200:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.focus\:text-neutral-900:focus {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-0:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-neutral-950:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(10 10 10 / var(--tw-ring-opacity));
}

.focus\:ring-slate-700:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(51 65 85 / var(--tw-ring-opacity));
}

.focus\:ring-offset-0:focus {
  --tw-ring-offset-width: 0px;
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:border-blue-100:focus-visible {
  --tw-border-opacity: 1;
  border-color: rgb(219 234 254 / var(--tw-border-opacity));
}

.focus-visible\:border-blue-400:focus-visible {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}

.focus-visible\:bg-blue-500\/70:focus-visible {
  background-color: rgb(59 130 246 / 0.7);
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:ring-0:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-blue-400:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(96 165 250 / var(--tw-ring-opacity));
}

.focus-visible\:ring-neutral-950:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(10 10 10 / var(--tw-ring-opacity));
}

.focus-visible\:ring-slate-700:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(51 65 85 / var(--tw-ring-opacity));
}

.focus-visible\:ring-offset-0:focus-visible {
  --tw-ring-offset-width: 0px;
}

.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}

.active\:bg-slate-400:active {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

.peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}

.aria-checked\:border-blue-400[aria-checked='true'] {
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}

.data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

.data-\[side\=bottom\]\:translate-y-1[data-side='bottom'] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=left\]\:-translate-x-1[data-side='left'] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=right\]\:translate-x-1[data-side='right'] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[side\=top\]\:-translate-y-1[data-side='top'] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.data-\[state\=open\]\:bg-neutral-100[data-state='open'] {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.data-\[state\=open\]\:bg-neutral-300[data-state='open'] {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

.data-\[state\=open\]\:text-neutral-500[data-state='open'] {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.data-\[state\=open\]\:text-neutral-900[data-state='open'] {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}

.data-\[state\=open\]\:animate-in[data-state='open'] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=closed\]\:animate-out[data-state='closed'] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=closed\]\:fade-out-0[data-state='closed'] {
  --tw-exit-opacity: 0;
}

.data-\[state\=open\]\:fade-in-0[data-state='open'] {
  --tw-enter-opacity: 0;
}

.data-\[state\=closed\]\:zoom-out-95[data-state='closed'] {
  --tw-exit-scale: 0.95;
}

.data-\[state\=open\]\:zoom-in-95[data-state='open'] {
  --tw-enter-scale: 0.95;
}

.data-\[side\=bottom\]\:slide-in-from-top-2[data-side='bottom'] {
  --tw-enter-translate-y: -0.5rem;
}

.data-\[side\=left\]\:slide-in-from-right-2[data-side='left'] {
  --tw-enter-translate-x: 0.5rem;
}

.data-\[side\=right\]\:slide-in-from-left-2[data-side='right'] {
  --tw-enter-translate-x: -0.5rem;
}

.data-\[side\=top\]\:slide-in-from-bottom-2[data-side='top'] {
  --tw-enter-translate-y: 0.5rem;
}

.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state='closed'] {
  --tw-exit-translate-x: -50%;
}

.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state='closed'] {
  --tw-exit-translate-y: -48%;
}

.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state='open'] {
  --tw-enter-translate-x: -50%;
}

.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state='open'] {
  --tw-enter-translate-y: -48%;
}

.dark\:border-neutral-50:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(250 250 250 / var(--tw-border-opacity));
}

.dark\:border-neutral-800:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(38 38 38 / var(--tw-border-opacity));
}

.dark\:bg-neutral-50:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.dark\:bg-neutral-800:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.dark\:bg-neutral-950:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(10 10 10 / var(--tw-bg-opacity));
}

.dark\:bg-red-900:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(127 29 29 / var(--tw-bg-opacity));
}

.dark\:text-neutral-400:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.dark\:text-neutral-50:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity));
}

.dark\:text-neutral-900:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.dark\:ring-offset-neutral-950:is(.dark *) {
  --tw-ring-offset-color: #0a0a0a;
}

.dark\:placeholder\:text-neutral-400:is(.dark *)::-moz-placeholder {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.dark\:placeholder\:text-neutral-400:is(.dark *)::placeholder {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.dark\:hover\:bg-neutral-50\/90:hover:is(.dark *) {
  background-color: rgb(250 250 250 / 0.9);
}

.dark\:hover\:bg-neutral-800:hover:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.dark\:hover\:bg-neutral-800\/80:hover:is(.dark *) {
  background-color: rgb(38 38 38 / 0.8);
}

.dark\:hover\:bg-red-900\/90:hover:is(.dark *) {
  background-color: rgb(127 29 29 / 0.9);
}

.dark\:hover\:text-neutral-50:hover:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity));
}

.dark\:focus\:bg-neutral-800:focus:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.dark\:focus\:text-neutral-50:focus:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity));
}

.dark\:focus\:ring-neutral-300:focus:is(.dark *) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(212 212 212 / var(--tw-ring-opacity));
}

.dark\:focus-visible\:ring-neutral-300:focus-visible:is(.dark *) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(212 212 212 / var(--tw-ring-opacity));
}

.dark\:data-\[state\=open\]\:bg-neutral-800[data-state='open']:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.dark\:data-\[state\=open\]\:text-neutral-400[data-state='open']:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.dark\:data-\[state\=open\]\:text-neutral-50[data-state='open']:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(250 250 250 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:justify-end {
    justify-content: flex-end;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:rounded-lg {
    border-radius: 0.5rem;
  }

  .sm\:text-left {
    text-align: left;
  }
}

.\[\&\>span\]\:line-clamp-1 > span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}
